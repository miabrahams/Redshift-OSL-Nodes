// ACES AP1 Gamut convert from other Color Gamuts conversion V.2.0 node by Saul Espinosa for Redshift
// Updated 1/4/2020

shader ACESconvert
(
        color input = 0, 
		
		int mode = 0
		[[  string label = "Input Color Space",
        string widget = "mapper",
        string options = "sRGB:0|Rec. 709:1|Rec. 2020:2|Display P3:3|DCI-P3:4|V-Gamut:5|S-Gamut:6"]],
		
		output color outColor = 0
)
{
	    if (mode == 0)
		
        {
        matrix aces_tm = matrix(
                        0.6131, 0.0701, 0.0206, 0,
                        0.3395, 0.9164, 0.1096, 0,
                        0.0474, 0.0135, 0.8698, 0,
                        0, 0, 0, 1);
        float r = input[0], g = input[1], b = input[2];
        outColor = transform(aces_tm, vector(r,g,b));
        }
		else if (mode == 1)
		{
        matrix aces_tm = matrix(
                        0.6131, 0.0701, 0.0206, 0,
                        0.3395, 0.9163, 0.1095, 0,
                        0.0473, 0.1345, 0.8698, 0,
                        0, 0, 0, 1);
        float r = input[0], g = input[1], b = input[2];
        outColor = transform(aces_tm, vector(r,g,b));
        }
		else if (mode == 2)
		{
        matrix aces_tm = matrix(
                        0.9748, 0.0021, 0.0055, 0,
                        0.0195, 0.9955, 0.0028, 0,
                        0.0206, 0.0245, 0.9706, 0,
                        0, 0, 0, 1);
        float r = input[0], g = input[1], b = input[2];
        outColor = transform(aces_tm, vector(r,g,b));
        }
		else if (mode == 3)
		{
        matrix aces_tm = matrix(
                        0.7357, 0.2121, 0.0520, 0,
                        0.0471, 0.9380, 0.0147, 0,
                        0.0206, 0.0411, 0.9552, 0,
                        0, 0, 0, 1);
        float r = input[0], g = input[1], b = input[2];
        outColor = transform(aces_tm, vector(r,g,b));
        }
		else if (mode == 4)
		{
        matrix aces_tm = matrix(
                        0.6947, 0.2562, 0.0490, 0,
                        0.0429, 0.9461, 0.0108, 0,
                        0.0036, 0.0430, 0.9533, 0,
                        0, 0, 0, 1);
        float r = input[0], g = input[1], b = input[2];
        outColor = transform(aces_tm, vector(r,g,b));
        }
		else if (mode == 5)
		{
        matrix aces_tm = matrix(
                        1.0486, -0.0293, -0.0033, 0,
                        0.0095, 1.1458, -0.0056, 0,
                        -0.0582, -0.1164, 1.0089, 0,
                        0, 0, 0, 1);
        float r = input[0], g = input[1], b = input[2];
        outColor = transform(aces_tm, vector(r,g,b));
        }
		else if (mode == 6)
		{
        matrix aces_tm = matrix(
                        1.0900, -0.0305, -0.0034, 0,
                        -0.0352, 1.1802, -0.0025, 0,
                        -0.0584, -0.1496, 1.0008, 0,
                        0, 0, 0, 1);
        float r = input[0], g = input[1], b = input[2];
        outColor = transform(aces_tm, vector(r,g,b));
        }
}